openapi: 3.0.3

info:
  title: neatMon Open Source API
  description: |-
    This is documentation for the neatMon Open Source API, to find out more about neatMon products please visit [Our Homepage](https://www.neatmon.com). 
    
    Some useful links:
    - [Knowledge Base](https://info.neatmon.com)
  termsOfService: https://hub.neatmon.com/terms
  contact:
    email: info@neatmon.com
  license:
    name: MIT License
    url: https://github.com/neatMon-Inc/neatmon.api/blob/workerQueue/LICENSE
  version: 1.0.11

externalDocs:
  description: neatMon open source API software repo
  url: https://github.com/neatMon-Inc/neatmon.api

servers:
  - url: https://api.neatmon.io:1330
    description: neatMon API production server

paths:
  /api/device/{p_guid}:
    post:
      summary: Handle device data post
      description: Receives data from devices and processes it, returning relevant control commands if any exist.
      parameters:
        - in: path
          name: p_guid
          required: true
          schema:
            type: string
          description: GUID of the device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceData'
      responses:
        '200':
          description: Data processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
        '500':
          description: Internal server error

  /api2/device/{p_guid}:
    post:
      summary: Handle device data post with CRC
      description: Receives data from devices, processes it, and returns relevant control commands with CRC if any exist.
      parameters:
        - in: path
          name: p_guid
          required: true
          schema:
            type: string
          description: GUID of the device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceData'
      responses:
        '200':
          description: Data processed successfully with CRC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResponse'
        '500':
          description: Internal server error

  /api/status:
    get:
      summary: Get the status of the API
      description: Useful for uptime monitoring of the API by a third party.
      responses:
        '200':
          description: API is working
          content:
            text/plain:
              schema:
                type: string
                example: "API Working Mon Aug 29 2024 10:00:00 GMT+0000 (Coordinated Universal Time)"

  /api/status/time:
    get:
      summary: Get the current time in timestamp format
      description: Returns the current server time as a timestamp.
      responses:
        '200':
          description: Current timestamp
          content:
            application/json:
              schema:
                type: object
                properties:
                  t:
                    description: current time in epoch format
                    type: integer
                    example: 1622547802

  /api/device/data/{m_guid}:
    get:
      summary: Get the status of a GUID
      description: Returns all data for a given GUID starting with the latest.
      parameters:
        - in: path
          name: m_guid
          required: true
          schema:
            type: string
          description: GUID of the device
        - in: query
          name: start
          schema:
            type: integer
          description: Start time in Unix timestamp
        - in: query
          name: end
          schema:
            type: integer
          description: End time in Unix timestamp
      responses:
        '200':
          description: Data for the given GUID
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Query results exceed limits
        '500':
          description: Internal server error

  /files/{filename}:
    get:
      summary: Get a file from the API server
      description: Retrieves a file from the server, typically for firmware updates.
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
          description: Name of the file
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found

components:
  schemas:
    DeviceData:
      type: object
      properties:
        id:
          type: string
        hw:
          type: string
        fw:
          type: string
        pn:
          type: string
        v:
          type: object
          additionalProperties:
            type: object
            properties:
              ts:
                type: integer
              data:
                type: number

    CommandResponse:
      type: object
      properties:
        t:
          type: integer
        cmd:
          type: object
          description: Commands to be sent to the device, if any.